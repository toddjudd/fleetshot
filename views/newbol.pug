extends layout

block content
  .inner
    form.form.newBol(method='post' action='/createBol' onsubmit="return validateForm()" autocomplete="off")
      input(name='type' type='hidden' value=bol.type)
      label(for='vin') Vin - Last 8 Digits:
      input(name='vin' type='text' autocomplete="nope" value=(bol.vin || ''))
      p.error.vin-error VIN must be filled out and exactly 17 digits
      label(for='customerName') Customer Name:
      input(name='customerName' type='text' autocomplete="nope" value=(bol.customerName || ''))
      p.error.customerName-error CustomerName must be filled out
      label(for='driver') Driver:
      input(name='driver' autocomplete="nope" type='text' value=(bol.driver || ''))
      p.error.driver-error A Driver must be selected
      button.getPosBtn(type='button') Get Current Location
      .gettingPos.pulsate Currently Getting Your Location 
        i.fas.fa-location-arrow
      .gotPos Got Your Location 
        i.fas.fa-map-marker-alt
      //- label(for="lng") Address Lng
      input(type="hidden" autocomplete="nope" id="lng" name="coordinates[0]" value=`${bol.coordinates ? bol.coordinates[0] : ''}`)
      //- p.error.lng-error Lng must be filled out
      //- label(for="lat") Address Lat
      input(type="hidden" autocomplete="nope" id="lat" name="coordinates[1]" value=`${bol.coordinates ? bol.coordinates[1] : ''}`)
      //- p.error.lat-error Lat must be filled out
      label(for='city') City
      input(name='city' type='text' autocomplete="nope")
      p.error.city-error The city must be filled out
      label(for='postal') Postal Code
      input(name='postal' type='text' autocomplete="nope")
      p.error.postal-error Code-error The postal Code must be filled out
      label(for='state') State
      select(name='state' autocomplete="nope")
        option(value='none' disabled selected) --
        each state in h.states
          option(value=state) #{state}
      p.error.state-error A State must be selected
      //- label(for='damage') Damage?
      //- p.error.damage-error Damage must be filled out
      //- label.radio-label(for='damage') Yes
      //-   input.radio(id='damage-yes' name='damage' type='radio' value='true')
      //- label.radio-label(for='damage') No&nbsp;
      //-   input.radio(id='damage-no' name='damage' type='radio' value='false')
      input.submit(type='submit' value='Submit')
  script.
    const vin = document.querySelector('input[name=vin]')
    const customerName = document.querySelector('input[name=customerName]')
    const city = document.querySelector('input[name=city]')
    const postal = document.querySelector('input[name=postal]')
    const driver = document.querySelector('input[name=driver]')
    const state = document.querySelector('select[name=state]')
    const get = document.querySelector('.gettingPos')
    const got = document.querySelector('.gotPos')
    //- const damageYes = document.querySelector('#damage-yes')
    //- const damageNo = document.querySelector('#damage-no')

    const errors = [...document.querySelectorAll('.error')]
    const errvin = document.querySelector('.vin-error')
    const errdriver = document.querySelector('.driver-error')
    const errcustomerName = document.querySelector('.customerName-error')
    const errlng = document.querySelector('.lng-error')
    const errlat = document.querySelector('.lat-error')
    const errcity = document.querySelector('.city-error')
    const errpostal = document.querySelector('.postal-error')
    const errstate = document.querySelector('.state-error')
    //- const errdamage = document.querySelector('.damage-error')

    const lat = document.querySelector('#lat')
    const lng = document.querySelector('#lng')
    const getPosBtn = document.querySelector('.getPosBtn')

    getPosBtn.addEventListener('click', getPos)

    get.style.display = 'none'
    got.style.display = 'none'
    
    function getPos() {
      got.style.display = 'none'
      get.style.display = ''
      get.classList.add('pulsate')
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(success, error);
      } else {
        error('not supported');
        get.style.display = 'none'
        got.style.display = 'none'
        get.classList.remove('pulsate')
      }
    }

    function success(position) {
      lat.value = position.coords.latitude
      lng.value = position.coords.longitude
      getAddress(lat.value, lng.value)
      get.classList.remove('pulsate')
      get.style.display = 'none'
      got.style.display = ''
      //- console.log(position.coords.latitude, position.coords.longitude);
    }

    function error(msg) {
      alert(msg.message);
    }

    function getAddress(lat, lng) {
      var xhr = new XMLHttpRequest();
      xhr.open('get', `/api/geocodeing/lat/${lat}/lng/${lng}`, true)
      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
      xhr.onload = function (e) {
        if (xhr.readyState ===4) {
          if (xhr.status === 200) {
            result = JSON.parse(xhr.responseText)
            if (result.status === 200) {
              city.value = result.city
              state.value = result.state
              postal.value = result.postal
            } else {
              console.log(result)
            }
          }
        }
      }
      xhr.onerror = function (e) {
        console.error(xhr.statusText);
      }
      xhr.send()
    }

    function validateForm() {
      err = 0
      errors.forEach(err => {
        err.style.display = 'none'
      })
      if(vin.value == '' || vin.value.length != 8) {
        err++
        errvin.style.display = 'block'
      }
      if(customerName.value ==''){ 
        err++
        errcustomerName.style.display = 'block'
      }
      if(lng.value =='') {
        err++
        errlng.style.display = 'block'
      }
      if(lat.value =='') {
        err++
        errlat.style.display = 'block'
      }
      if(city.value == '') {
        err++
        errcity.style.display = 'block'
      }
      if(state.value == 'none') {
        err++
        errstate.style.display = 'block'
      }
      if(postal.value == '') {
        err++
        errpostal.style.display = 'block'
      }
      if(driver.value == '') {
        err++
        errdriver.style.display = 'block'
      }
      //- if(!damageNo.checked && !damageYes.checked) {
      //-   err++
      //-   errdamage.style.display = 'block'
      //- }
      if (err) return false;
      return true;
    }

